name: CI/CD Pipeline

on:
  push:
    branches:
      - develop  # Despliega automáticamente en desarrollo y preprod
  workflow_dispatch:  # Permite ejecutar manualmente para despliegue en producción

jobs:
  build-and-deploy-dev:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 8

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Publish to Exchange
        env:
          businessGroupId: ${{ secrets.BUSINESS_GROUP_ID }}
          connectedAppClientId: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
          connectedAppClientSecret: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
          target: ${{ secrets.TARGET }}
          applicationName: metrodora-testcicd-dev
          replicas: ${{ secrets.REPLICAS }}
          vCores: ${{ secrets.VCORES }}
          key: ${{ secrets.KEY_DEV }}
        run: |
          # Comando para publicar el asset en Exchange
          mvn -B -s settings.xml clean -fai deploy \
            -DbusinessGroupId=${{ env.businessGroupId }} \
            -DconnectedAppClientId=${{ env.connectedAppClientId }} \
            -DconnectedAppClientSecret=${{ env.connectedAppClientSecret }} \
            -Dkey=${{ env.key }}
          
        continue-on-error: true
        
      - name: Deploy application
        env:
          businessGroupId: ${{ secrets.BUSINESS_GROUP_ID }}
          connectedAppClientId: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
          connectedAppClientSecret: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
          target: ${{ secrets.TARGET }}
          applicationName: metrodora-testcicd-dev
          replicas: ${{ secrets.REPLICAS }}
          vCores: ${{ secrets.VCORES }}
          key: ${{ secrets.KEY_DEV }}
        run: |
          # Comando para desplegar la aplicación
          mvn -B -s settings.xml clean deploy -DmuleDeploy \
            -DbusinessGroupId=${{ env.businessGroupId }} \
            -DconnectedAppClientId=${{ env.connectedAppClientId }} \
            -DconnectedAppClientSecret=${{ env.connectedAppClientSecret }} \
            -Denv=dev \
            -Dtarget=${{ env.target }} \
            -DapplicationName=${{ env.applicationName }} \
            -Dreplicas=${{ env.replicas }} \
            -DvCores=${{ env.vCores }} \
            -Dkey=${{ secrets.KEY_DEV }}
            
  build-and-deploy-pro:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Publish to Exchange and Deploy
        env:
          businessGroupId: ${{ secrets.BUSINESS_GROUP_ID }}
          connectedAppClientId: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
          connectedAppClientSecret: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
          target: ${{ secrets.TARGET }}
          applicationName: metrodora-testcicd-pro
          replicas: ${{ secrets.REPLICAS }}
          vCores: ${{ secrets.VCORES }}
        run: |
          # Comando para publicar el asset en Exchange
          echo "Intentando publicar el asset en Exchange..."
          mvn -B -s settings.xml clean deploy \
            -DbusinessGroupId=${{ env.businessGroupId }} \
            -DconnectedAppClientId=${{ env.connectedAppClientId }} \
            -DconnectedAppClientSecret=${{ env.connectedAppClientSecret }} \
            -Dkey=${{ secrets.KEY_PRO }} || echo "Proceso de publicación terminado, continuando con el despliegue..."

          # Comando para desplegar la aplicación
          echo "Desplegando la aplicación en el entorno ${{ env.env }}..."
          mvn -B -s settings.xml clean deploy -DmuleDeploy \
            -DbusinessGroupId=${{ env.businessGroupId }} \
            -DconnectedAppClientId=${{ env.connectedAppClientId }} \
            -DconnectedAppClientSecret=${{ env.connectedAppClientSecret }} \
            -Denv=pro \
            -Dtarget=${{ env.target }} \
            -DapplicationName=${{ env.applicationName }} \
            -Dreplicas=${{ env.replicas }} \
            -DvCores=${{ env.vCores }} \
            -Dkey=${{ secrets.KEY_PRO }}