name: CI/CD Pipeline

on:
  push:
    branches:
      - develop  # Despliega automáticamente en desarrollo y preprod
  workflow_dispatch:  # Permite ejecutar manualmente para despliegue en producción
    inputs:
      target-environment:
        description: 'Despliegue en el entorno deseado (solo se usa para producción)'
        required: true
        default: 'prod'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [develop, main]
    if: github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Determine Environment
        id: environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "env=dev" >> $GITHUB_ENV
            echo "key=${{ secrets.DEV_KEY }}" >> $GITHUB_ENV
          elif [[ "${{ github.event.inputs.target-environment }}" == "prod" ]]; then
            echo "env=prod" >> $GITHUB_ENV
            echo "key=${{ secrets.PROD_KEY }}" >> $GITHUB_ENV
          else
            echo "Error: No se pudo determinar el entorno."
            exit 1

      - name: Publish to Exchange and Deploy
        env:
          businessGroupId: ${{ secrets.BUSINESS_GROUP_ID }}
          connectedAppClientId: ${{ secrets.CONNECTED_APP_CLIENT_ID }}
          connectedAppClientSecret: ${{ secrets.CONNECTED_APP_CLIENT_SECRET }}
          env: ${{ env.env }}
          target: ${{ secrets.TARGET }}
          applicationName: metrodora-testcicd-${{ env.env }}
          replicas: ${{ secrets.REPLICAS }}
          vCores: ${{ secrets.VCORES }}
          key: ${{ env.key }}
        run: |
          echo "Desplegando en el entorno: ${{ env.env }}"

          # Comando para publicar el asset en Exchange
          echo "Intentando publicar el asset en Exchange..."
          mvn -B -s settings.xml clean deploy \
            -DbusinessGroupId=${{ env.businessGroupId }} \
            -DconnectedAppClientId=${{ env.connectedAppClientId }} \
            -DconnectedAppClientSecret=${{ env.connectedAppClientSecret }} \
            -Dkey=${{ env.key }} || echo "Proceso de publicación terminado, continuando con el despliegue..."

          # Comando para desplegar la aplicación
          echo "Desplegando la aplicación en el entorno ${{ env.env }}..."
          mvn -B -s settings.xml clean deploy -DmuleDeploy \
            -DbusinessGroupId=${{ env.businessGroupId }} \
            -DconnectedAppClientId=${{ env.connectedAppClientId }} \
            -DconnectedAppClientSecret=${{ env.connectedAppClientSecret }} \
            -Denv=${{ env.env }} \
            -Dtarget=${{ env.target }} \
            -DapplicationName=${{ env.applicationName }} \
            -Dreplicas=${{ env.replicas }} \
            -DvCores=${{ env.vCores }} \
            -Dkey=${{ env.key }}
